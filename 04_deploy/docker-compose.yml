version: '3.8'
services:
  reverse-proxy:
    image: "traefik:v2.8"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=kylian.bourcoud@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"  

  database :
    container_name: plan-heig-database
    image: postgis/postgis
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: 
      - 5432:5432
    volumes: 
      - database:/var/lib/postgresql/data
      - ./sql/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql
      - ./sql/02_create.sql:/docker-entrypoint-initdb.d/02_create.sql
      - ./sql/03_insert.sql:/docker-entrypoint-initdb.d/03_insert.sql

  server-api:
    container_name: plan-heig-server-api
    # build: ../03_code/serverAPI
    image: registry.gitlab.com/tb-heig/plan-heig-vd/server-api
    environment: 
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=database
    ports:
      - 3001:3001
    depends_on:
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-api.rule=Host(`${HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.server-api.entrypoints=web,web-secure"
      - "traefik.http.routers.server-api.tls.certresolver=myresolver"

  server:
    container_name: plan-heig-server
    # build: ../03_code/frontend
    image: registry.gitlab.com/tb-heig/plan-heig-vd/server
    environment:
     - VITE_API_URL=http://localhost:3001
    ports:
      - 3000:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`${HOST}`)"
      - "traefik.http.routers.server.entrypoints=web,web-secure"
      - "traefik.http.routers.server.tls.certresolver=myresolver"

volumes:
  database: